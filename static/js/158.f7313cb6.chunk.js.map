{"version":3,"file":"static/js/158.f7313cb6.chunk.js","mappings":"oIAAA,IAAMA,EAAW,+BACXC,EAAM,mCAaZ,IAXmB,SAACC,GAAmC,IAAxBC,EAAuB,uDAAP,GAC7C,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,YAAgBE,EAAhB,oBAAqCD,EAArC,YAA4CE,IAAiBE,MACvE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,iOAElB,OAAOF,EAASG,MACjB,GAEJ,C,8HCVYC,E,OAAcC,GAAAA,MAAH,8K,SCoDxB,EA9Ce,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACzCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAVc,eAUQP,GACnBX,MAAK,SAAAmB,GACJV,EAAgBU,EAAIC,QACrB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACX,IAOJ,OACE,4BACE,SAACN,EAAD,CACEoB,KAAK,OACLC,SATqB,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MAEtCf,EAD4B,KAAVe,EAAe,CAAC,EAAI,CAAEE,MAAOF,GAEhD,EAOKA,MAAOd,EACPiB,YAAY,kBAGW,IAAxBtB,EAAauB,SACZ,0BACE,wBACGvB,EAAawB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAChB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAOrB,EAA1B,UACE,uBAAImB,OAFCD,EADO,UAY7B,C","sources":["Api/API.js","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'a5426bdbaf9156d8939bf87c1cb6ad6c';\n\nconst fetchQuery = (QUERY_URL, searchOptions = '') => {\n  return fetch(`${BASE_URL}/${QUERY_URL}?api_key=${KEY}&${searchOptions}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error('помилка на сервері або неправильний запит');\n      }\n      return response.json();\n    }\n  );\n};\n\nexport default fetchQuery;\n","import styled from 'styled-components';\n\nexport const InputSearch = styled.input`\n  font-size: 20px;\n  padding: 10px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border: solid 1px rgb(0, 1, 0, 0.24);\n  border-radius: 7px;\n`;\n","import fetchQuery from 'Api/API';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { InputSearch } from './Movies.styled';\n\n//* запит згідно з API\nconst QUERY_URL = 'search/movie';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  const movieName = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchQuery(QUERY_URL, searchParams)\n      .then(res => {\n        setSearchMovies(res.results);\n      })\n      .catch(error => console.log(error));\n  }, [searchParams]);\n\n  const updateSearchParams = ({ target: { value } }) => {\n    const searchOpt = value === '' ? {} : { query: value };\n    setSearchParams(searchOpt);\n  };\n\n  return (\n    <div>\n      <InputSearch\n        type=\"text\"\n        onChange={updateSearchParams}\n        value={movieName}\n        placeholder=\"Search movies\"\n      />\n\n      {searchMovies.length !== 0 && (\n        <div>\n          <ul>\n            {searchMovies.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`${id}`} state={location}>\n                  <p>{title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","KEY","QUERY_URL","searchOptions","fetch","then","response","ok","Error","json","InputSearch","styled","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","fetchQuery","res","results","catch","error","console","log","type","onChange","value","target","query","placeholder","length","map","id","title","to","state"],"sourceRoot":""}